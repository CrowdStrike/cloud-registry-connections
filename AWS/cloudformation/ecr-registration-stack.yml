---
AWSTemplateFormatVersion: '2010-09-09'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: AWS Configuration
        Parameters:
          - S3Bucket
          - PermissionsBoundary
          - GovCloud
          - CommToGovCloud
      - Label:
          default: Deployment Scope
        Parameters:
          - Regions
      - Label:
          default: Falcon API Credentials
        Parameters:
          - FalconClientId
          - FalconSecret
          - FalconCloud
      - Label:
          default: Resource Names
        Parameters:
          - ResourcePrefix
          - ResourceSuffix
      - Label:
          default: Retention
        Parameters:
          - DisconnectUponDelete

Parameters:
  S3Bucket:
    Type: String
    Description: Location of templates and lambda.zip package

  PermissionsBoundary:
    Type: String
    Description: (Optional) The name of the policy used to set the permissions boundary for IAM roles
    Default: ''

  GovCloud:
    Description: Whether this is a GovCloud AWS Account
    Type: String
    AllowedValues:
      - 'True'
      - 'False'
    Default: 'False'

  CommToGovCloud:
    Description: Whether this is a commercial AWS Account connecting to GovCloud Falcon
    Type: String
    AllowedValues:
      - 'True'
      - 'False'
    Default: 'False'

  Regions:
    Type: String
    Description: Which regions to register ECR Connections.  If left blank, all active regions will be registered

  FalconClientId:
    Description: CrowdStrike Falcon Client ID
    NoEcho: 'true'
    Type: String

  FalconSecret:
    Description: CrowdStrike Falcon Client Secret
    NoEcho: 'true'
    Type: String

  FalconCloud:
    Type: String
    Description: CrowdStrike Falcon Cloud
    AllowedValues: ['us-1', 'us-2', 'eu-1', 'us-gov-1', 'us-gov-2']

  ResourcePrefix:
    Type: String
    Description: The prefix to be added to all resource names
    Default: 'crowdstrike-ecr'

  ResourceSuffix:
    Type: String
    Description: (Optional) The suffix be added to all resource names
    Default: ''

  DisconnectUponDelete:
    Description: Whether to automatically disconnect all ECR Registries from CrowdStrike upon deletion of this stack.
    Type: String
    AllowedValues:
      - 'True'
      - 'False'
    Default: 'False'

Conditions:
  SetPermissionsBoundary: !Not [ !Equals [ !Ref PermissionsBoundary, '' ]]
  IsGov: !Equals [ !Ref 'GovCloud', 'True' ]

Resources:
  CrowdStrikeSecrets:
    Type: AWS::SecretsManager::Secret
    Metadata:
      checkov:
        skip:
          - id: CKV_AWS_149
            comment: The default key aws/secretsmanager is sufficient to secure this resource
    Properties:
      Description: CrowdStrike Credentials
      Name: !Sub "${ResourcePrefix}-api-credentials${ResourceSuffix}"
      SecretString:
        Fn::Join:
          - ''
          - - '{"FalconClientId":"'
            - Ref: "FalconClientId"
            - '","FalconSecret": "'
            - Ref: FalconSecret
            - '"}'
  ECRExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub "${ResourcePrefix}-execution-role${ResourceSuffix}"
      PermissionsBoundary:
        Fn::If:
          - SetPermissionsBoundary
          - !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/${PermissionsBoundary}'
          - Ref: AWS::NoValue
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies:
        - PolicyName: crowdstrike-ecr-execution-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - ec2:DescribeRegions
                Resource: '*'
              - Effect: Allow
                Action: 
                  - ssm:PutParameter
                  - ssm:GetParameter
                  - ssm:DeleteParameter
                Resource:
                  - !Sub 'arn:${AWS::Partition}:ssm:*:*:parameter/crowdstrike-ecr-lambda-external-id-*'
              - Effect: Allow
                Action:
                  - 'secretsmanager:GetSecretValue'
                Resource:
                  - !Sub 'arn:${AWS::Partition}:secretsmanager:*:*:secret:${ResourcePrefix}-api-credentials${ResourceSuffix}*'
              - Effect: Allow
                Action:
                  - iam:ListPolicies
                  - iam:GetRole
                  - iam:GetPolicy
                  - iam:PutRolePermissionsBoundary
                  - iam:ListRoles
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:AttachRolePolicy
                  - iam:PutRolePolicy
                  - iam:DeleteRolePermissionsBoundary
                  - iam:DetachRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:ListRolePolicies
                  - iam:GetRolePolicy
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::*:role/CrowdStrikeECRConnectionRole-*
                  - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly

  ECRLambda:
    Type: AWS::Lambda::Function
    DependsOn: CrowdStrikeSecrets
    Properties:
      Environment:
        Variables:
          secret_name: !Sub "${ResourcePrefix}-api-credentials${ResourceSuffix}"
          secret_region: !Ref AWS::Region
          permissions_boundary: !If [SetPermissionsBoundary, !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/${PermissionsBoundary}', '']
          crowdstrike_principal: arn:aws:iam::292230061137:role/CrowdStrikeCustomerRegistryAssessmentRole
          gov_cloud_principal: arn:aws-us-gov:iam::358431324613:role/CrowdStrikeCustomerRegistryAssessmentRole
          gov_cloud: !Ref GovCloud
          comm_to_gov_cloud: !Ref CommToGovCloud
          stack_id: !Select [4, !Split ['-', !Select [2, !Split ['/', !Ref AWS::StackId]]]]
          disconnect_upon_delete: !Ref DisconnectUponDelete
          cs_cloud: !Ref FalconCloud
          role_policy_arn: !If [IsGov, "arn:aws-us-gov:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly", "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"]
          regions: !Ref Regions
      Handler: lambda.lambda_handler
      MemorySize: 128
      Role: !GetAtt ECRExecutionRole.Arn
      Runtime: python3.12
      Timeout: 300
      FunctionName: !Sub "${ResourcePrefix}-function${ResourceSuffix}"
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: lambda_function.zip

  TriggerECRLambda:
    Type: Custom::LambdaCustomResource
    Version: '1.0'
    Properties:
      ServiceToken: !GetAtt ECRLambda.Arn